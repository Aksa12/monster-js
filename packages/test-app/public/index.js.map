{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@monster-js/test-app/../core/src/directives/view.directive.ts","webpack://@monster-js/test-app/../core/src/enums/hook-keys.enum.ts","webpack://@monster-js/test-app/../core/src/component/set-props.ts","webpack://@monster-js/test-app/../core/src/component/hooks.ts","webpack://@monster-js/test-app/../core/src/component/detect-changes.ts","webpack://@monster-js/test-app/../core/src/component/evaluate-watchers.ts","webpack://@monster-js/test-app/../core/src/utils/define-component.ts","webpack://@monster-js/test-app/../core/src/component/component.ts","webpack://@monster-js/test-app/../core/src/component/create-component.ts","webpack://@monster-js/test-app/../core/src/view-engine/create-element.ts","webpack://@monster-js/test-app/../core/src/view-engine/create-text.ts","webpack://@monster-js/test-app/../core/src/view-engine/attribute-binding.ts","webpack://@monster-js/test-app/../core/src/view-engine/render-child.ts","webpack://@monster-js/test-app/../core/src/utils/dev-tool.ts","webpack://@monster-js/test-app/../core/src/state/create-shared-state.ts","webpack://@monster-js/test-app/../core/src/pipes/pipe.ts","webpack://@monster-js/test-app/../core/src/pipes/lowercase.pipe.ts","webpack://@monster-js/test-app/../core/src/pipes/uppercase.pipe.ts","webpack://@monster-js/test-app/./src/app/app.tsx","webpack://@monster-js/test-app/./src/index.ts"],"sourcesContent":["import { DirectiveParam } from \"../interfaces/directive-param.interface\";\r\n\r\nexport function viewDir(params: DirectiveParam) {\r\n    const { directives, element, context } = params;\r\n    const { model, ref } = directives;\r\n\r\n    if (model) {\r\n        const [ modelGetter, modelSetter ] = model.get();\r\n        (element as HTMLInputElement).value = modelGetter();\r\n        element.addEventListener('input', (event: any) => {\r\n            modelSetter(event.target.value);\r\n            context.detectChanges();\r\n        });\r\n    }\r\n\r\n    if (ref) {\r\n        ref.set(element);\r\n    }\r\n}\r\n","export enum HookKeys {\r\n    afterInit = 'afterInit',\r\n    onDestroy = 'onDestroy',\r\n    onViewChange = 'onViewChange',\r\n    onChangeDetection = 'onChangeDetection',\r\n    onPropsChange = 'onPropsChange'\r\n}","import { HookKeys } from \"../enums/hook-keys.enum\";\r\nimport { CustomObject } from \"../interfaces/custom-object.interface\";\r\n\r\n/**\r\n * This function is used to set props from the parent component to child.\r\n * The `this` context is the child component\r\n * \r\n * @param props The properties that will be passed to the component from the parent\r\n */\r\nexport function setProps(props: CustomObject) {\r\n    for (const [key, value] of Object.entries(props)) {\r\n        this.props[key] = value;\r\n    }\r\n    this.hooks.run(HookKeys.onPropsChange, [this.props])\r\n    if (this.isConnected) {\r\n        this.detectChanges();\r\n    }\r\n}\r\n","import { HookKeys } from \"../enums/hook-keys.enum\";\r\nimport { HookItem } from \"../interfaces/hook-item.interface\";\r\nimport { Hooks } from \"../interfaces/hooks.interface\";\r\n\r\nexport class HooksCls {\r\n    private hooks: { [key in keyof Hooks]: HookItem[] } = {\r\n        afterInit: [],\r\n        onDestroy: [],\r\n        onViewChange: [],\r\n        onChangeDetection: [],\r\n        onPropsChange: []\r\n    };\r\n\r\n    public set(key: HookKeys, hook: HookItem) {\r\n        this.hooks[key].push(hook);\r\n    }\r\n\r\n    public run(key: HookKeys, args: any[] = []) {\r\n        this.hooks[key] = this.hooks[key].filter(hook => hook.isActive());\r\n        this.hooks[key].forEach(item => item.hook(...args));\r\n    }\r\n\r\n    public clear(key: HookKeys) {\r\n        this.hooks[key] = [];\r\n    }\r\n}","import { HookKeys } from \"../enums/hook-keys.enum\";\r\nimport { evaluateWatchers } from \"./evaluate-watchers\";\r\n\r\n/**\r\n * This function is use to run change detection of the component.\r\n * The `this` context is the component that change detection will run\r\n * \r\n * @returns void\r\n */\r\nexport function detectChanges() {\r\n    if (this.isChangeDetectionRunning) {\r\n        return;\r\n    }\r\n    this.isChangeDetectionRunning = true;\r\n\r\n    let hasViewChanges = evaluateWatchers(this);\r\n\r\n    this.hooks.run(HookKeys.onChangeDetection);\r\n    if (hasViewChanges) {\r\n        this.hooks.run(HookKeys.onViewChange);\r\n    }\r\n\r\n    this.isChangeDetectionRunning = false;\r\n}\r\n","import { ComponentInstance } from \"../interfaces/component-instance.interface\";\r\n\r\nexport function evaluateWatchers(context: ComponentInstance): boolean {\r\n    let hasViewChanges = false;\r\n    [...context.conditionWatchers, ...context.watchers].forEach(watcher => {\r\n        if (watcher.isUpdated() && watcher.isConnected()) {\r\n            hasViewChanges = true;\r\n            watcher.update(watcher.currentValue);\r\n        }\r\n    });\r\n\r\n    // cleanup watchers\r\n    context.conditionWatchers = context.conditionWatchers.filter(watcher => watcher.isConnected());\r\n    context.watchers = context.watchers.filter(watcher => watcher.isConnected());\r\n\r\n    return hasViewChanges;\r\n}","import { MonsterWebComponent } from \"../interfaces/monster-web-component.interface\";\r\n\r\nexport function defineComponent(component: MonsterWebComponent) {\r\n    customElements.define(component.selector, component);\r\n}\r\n","import { createComponent } from \"./create-component\";\r\n\r\nexport const component = createComponent;","import { viewDir } from \"../directives/view.directive\";\r\nimport { ComponentInstance } from \"../interfaces/component-instance.interface\";\r\nimport { CustomObject } from \"../interfaces/custom-object.interface\";\r\nimport { DirectiveParam } from \"../interfaces/directive-param.interface\";\r\nimport { Watcher } from \"../interfaces/watcher.interface\";\r\nimport { FunctionComponent } from \"../interfaces/function-component.interface\";\r\nimport { setProps } from \"./set-props\";\r\nimport { HooksCls } from \"./hooks\";\r\nimport { HookKeys } from \"../enums/hook-keys.enum\";\r\nimport { detectChanges } from \"./detect-changes\";\r\nimport { defineComponent } from \"../utils/define-component\";\r\n\r\nexport function createComponent(functionComponent: FunctionComponent, selector: string): CustomElementConstructor {\r\n\r\n    const superClass = functionComponent.superClass || HTMLElement;\r\n\r\n    return class extends superClass implements ComponentInstance {\r\n\r\n        public static selector = selector;\r\n\r\n\r\n        private fnComponent = functionComponent;\r\n\r\n\r\n        /**\r\n         * State\r\n         */\r\n        state: CustomObject = {};\r\n        stateIndex: number = 0;\r\n\r\n\r\n        /**\r\n         * Directives\r\n         */\r\n        directives: CustomObject<(param: DirectiveParam) => void> = {\r\n            view: viewDir,\r\n            ...functionComponent.directives\r\n        };\r\n\r\n\r\n        /**\r\n         * Pipes\r\n         */\r\n        pipes = functionComponent.pipes || {};\r\n\r\n\r\n        /**\r\n         * Hooks\r\n         */\r\n        hooks: HooksCls = new HooksCls();\r\n\r\n\r\n        /**\r\n         * Props\r\n         */\r\n        props: CustomObject = {};\r\n        setProps = setProps.bind(this);\r\n\r\n\r\n        /**\r\n         * Change detection\r\n         */\r\n        public isChangeDetectionRunning: boolean = false;\r\n        detectChanges = detectChanges.bind(this);\r\n        watchers: Watcher[] = [];\r\n        conditionWatchers: Watcher[] = [];\r\n\r\n\r\n\r\n\r\n\r\n        connectedCallback() {\r\n\r\n            if (!this.fnComponent.childrenDefined) {\r\n                (this.fnComponent.children || []).forEach(child => defineComponent(child));\r\n            }\r\n            this.fnComponent.childrenDefined = true;\r\n\r\n            const element = this.fnComponent(this.props, this);\r\n            this.appendChild(element);\r\n\r\n\r\n            if (this.fnComponent.styles) {\r\n                const styles = this.fnComponent.styles;\r\n                this.fnComponent.styles = null;\r\n                const styleEl = document.createElement('style');\r\n                styleEl.textContent = styles;\r\n                document.getElementsByTagName('head')[0].appendChild(styleEl);\r\n            }\r\n\r\n\r\n            /**\r\n             * Run onPropsChange hook during initialization if there are props present\r\n             */\r\n            if (Object.keys(this.props).length > 0) {\r\n                this.hooks.run(HookKeys.onPropsChange, [this.props]);\r\n            }\r\n\r\n\r\n            this.hooks.run(HookKeys.afterInit);\r\n            this.hooks.clear(HookKeys.afterInit);\r\n        }\r\n\r\n        disconnectedCallback() {\r\n            this.hooks.run(HookKeys.onDestroy);\r\n        }\r\n\r\n    }\r\n}","import { CustomObject } from \"../interfaces/custom-object.interface\";\r\n\r\nexport function createElement(tag: string, attributes: CustomObject = {}, children: (HTMLElement | Text)[] = []): HTMLElement {\r\n    const element = document.createElement(tag);\r\n\r\n    for (const [key, value] of Object.entries(attributes)) {\r\n        element.setAttribute(key, value);\r\n    }\r\n\r\n    element.append(...children);\r\n\r\n    return element;\r\n}","export function createText(text: string): Text {\r\n    return document.createTextNode(text);\r\n}","import { ComponentInstance } from \"../interfaces/component-instance.interface\";\r\nimport { CustomObject } from \"../interfaces/custom-object.interface\";\r\nimport { Watcher } from \"../interfaces/watcher.interface\";\r\n\r\nexport function attributeBinding(context: ComponentInstance, element: HTMLElement, attributes: CustomObject<() => any>) {\r\n\r\n    const watcher: Watcher = {\r\n        currentValue: {},\r\n        isConnected: () => element.isConnected,\r\n        isUpdated: () => {\r\n            let isUpdated = false;\r\n\r\n            for (const [key, value] of Object.entries(attributes)) {\r\n                const newValue = value();\r\n                if (watcher.currentValue[key] !== newValue) {\r\n                    isUpdated = true;\r\n                }\r\n                watcher.currentValue[key] = newValue;\r\n            }\r\n\r\n            return isUpdated;\r\n        },\r\n        update: ((newValue: CustomObject) => {\r\n            for (const [key, value] of Object.entries(newValue)) {\r\n                element.setAttribute(key, value);\r\n            }\r\n        })\r\n    };\r\n\r\n    for (const [key, value] of Object.entries(attributes)) {\r\n        const currentValue = value();\r\n        watcher.currentValue[key] = currentValue;\r\n        element.setAttribute(key, currentValue);\r\n    }\r\n\r\n    context.watchers.push(watcher);\r\n    return element;\r\n}\r\n","import { ComponentInstance } from \"../interfaces/component-instance.interface\";\r\nimport { CustomObject } from \"../interfaces/custom-object.interface\";\r\nimport { Watcher } from \"../interfaces/watcher.interface\";\r\n\r\nexport function renderChild(\r\n    tag: string,\r\n    attributes: CustomObject,\r\n    children: (HTMLElement | Text)[],\r\n    context: ComponentInstance,\r\n    props: CustomObject<() => any>\r\n): HTMLElement {\r\n    const child = customElements.get(tag);\r\n    if (!child) {\r\n        console.error(`The component ${tag} is not defined.`);\r\n        return;\r\n    }\r\n    const element = new child();\r\n\r\n    if (Object.keys(props).length > 0) {\r\n        /**\r\n         * Add props watcher is there is a props\r\n         */\r\n        const watcher: Watcher = {\r\n            currentValue: {},\r\n            isConnected: () => element.isConnected,\r\n            isUpdated: () => {\r\n                let hasChanges = false;\r\n                for (const [key, value] of Object.entries(props)) {\r\n                    const newValue = value();\r\n                    if (watcher.currentValue[key] !== newValue) {\r\n                        hasChanges = true;\r\n                    }\r\n                    watcher.currentValue[key] = newValue;\r\n                }\r\n                return hasChanges;\r\n            },\r\n            update: (newValue: CustomObject) => {\r\n                (element as unknown as ComponentInstance).setProps(newValue);\r\n            }\r\n        };\r\n        watcher.isUpdated();\r\n        watcher.update(watcher.currentValue);\r\n        if (context.watchers && Array.isArray(context.watchers)) {\r\n            context.watchers.push(watcher);\r\n        }\r\n    }\r\n\r\n\r\n    for (const [key, value] of Object.entries(attributes)) {\r\n        element.setAttribute(key, value);\r\n    }\r\n    element.append(...children);\r\n    return element;\r\n}\r\n","import { CustomObject } from \"../interfaces/custom-object.interface\";\r\n\r\nexport class DevTool {\r\n    private static instance;\r\n\r\n    private devTool;\r\n\r\n    constructor() {\r\n        if (DevTool.instance) {\r\n            return DevTool.instance;\r\n        }\r\n\r\n        if ((window as any).__REDUX_DEVTOOLS_EXTENSION__) {\r\n            this.devTool = (window as any).__REDUX_DEVTOOLS_EXTENSION__.connect();\r\n        }\r\n\r\n        DevTool.instance = this;\r\n    }\r\n\r\n    subscribe(handler: (message?: any) => void) {\r\n        if (this.devTool) {\r\n            this.devTool.subscribe(handler);\r\n        }\r\n    }\r\n\r\n    init(state: CustomObject) {\r\n        if (this.devTool) {\r\n            this.devTool.init(state);\r\n        }\r\n    }\r\n\r\n    send(action: string, state: CustomObject) {\r\n        if (this.devTool) {\r\n            this.devTool.send(action, state);\r\n        }\r\n    }\r\n}","import { ComponentInstance } from \"../interfaces/component-instance.interface\";\r\nimport { DevTool } from \"../utils/dev-tool\";\r\n\r\ninterface ChangeDetection {\r\n    isConnected: () => boolean;\r\n    changeDetection: () => void;\r\n};\r\n\r\nlet state = {};\r\nlet changeDetections: ChangeDetection[] = [];\r\n\r\n\r\n/**\r\n * Devtool\r\n */\r\nconst devTool = new DevTool();\r\ndevTool.subscribe((message) => {\r\n    if (message.type === 'DISPATCH' && message.state) {\r\n        const newSate = JSON.parse(message.state);\r\n\r\n        for (const key in newSate) {\r\n            state[key] = newSate[key];\r\n        }\r\n\r\n        runChangeDetections();\r\n    }\r\n});\r\ndevTool.init(state);\r\n\r\n/**\r\n * Devtool [end]\r\n */\r\n\r\n\r\nexport function createSharedState<T>(name: string, value?: T) {\r\n    state[name] = value;\r\n    devTool.send(`Init : ${name}`, state);\r\n\r\n    return function(context: ComponentInstance): [() => T, (value: T) => void] {\r\n        changeDetections.push({\r\n            isConnected: () => (context as unknown as HTMLElement).isConnected,\r\n            changeDetection: () => context.detectChanges()\r\n        });\r\n\r\n        const getter = () => state[name];\r\n        const setter = (value: T) => {\r\n            if (value !== state[name]) {\r\n                state[name] = value;\r\n                runChangeDetections();\r\n\r\n                devTool.send(`SET : ${name}`, state);\r\n\r\n            }\r\n        }\r\n\r\n        return [getter, setter];\r\n    }\r\n}\r\n\r\nfunction runChangeDetections() {\r\n    changeDetections = changeDetections.filter(item => item.isConnected());\r\n    changeDetections.forEach(item => item.changeDetection());\r\n}","import { FunctionPipe } from \"../interfaces/function-pipe.interface\";\r\n\r\nexport function pipe(fnPipe: FunctionPipe, selector: string) {\r\n    fnPipe.selector = selector;\r\n    return fnPipe;\r\n}","import { pipe } from \"./pipe\";\r\n\r\nfunction lowercase(text: string) {\r\n    return text.toLowerCase();\r\n}\r\n\r\nexport const lowercasePipe = pipe(lowercase, 'lowercase');","import { pipe } from \"./pipe\";\r\n\r\nfunction uppercase(text: string, params: any[]) {\r\n    return text.toUpperCase();\r\n}\r\n\r\nexport const uppercasePipe = pipe(uppercase, 'uppercase');\r\n","import { component, defineComponent } from '@monster-js/core';\r\n\r\nfunction child() {\r\n    return <h1>Child</h1>\r\n}\r\n\r\ndefineComponent(component(child, 'app-child'));\r\n\r\nfunction app() {\r\n    let id = 100;\r\n    return <div>\r\n        <h1 id={id}>Hello World!</h1>\r\n        <app-child></app-child>\r\n    </div>\r\n}\r\n\r\nexport default component(app, 'app-root');\r\n","import { defineComponent } from '@monster-js/core';\r\nimport app from './app/app';\r\n\r\ndefineComponent(app);\r\n"],"names":["viewDir","params","directives","element","context","model","ref","modelGetter","modelSetter","get","value","addEventListener","event","target","detectChanges","set","HookKeys","setProps","props","key","Object","entries","this","hooks","run","isConnected","HooksCls","afterInit","onDestroy","onViewChange","onChangeDetection","onPropsChange","hook","push","args","filter","isActive","forEach","item","clear","isChangeDetectionRunning","hasViewChanges","conditionWatchers","watchers","watcher","isUpdated","update","currentValue","evaluateWatchers","defineComponent","component","customElements","define","selector","functionComponent","superClass","HTMLElement","fnComponent","state","stateIndex","view","pipes","bind","connectedCallback","childrenDefined","children","child","appendChild","styles","styleEl","document","createElement","textContent","getElementsByTagName","keys","length","disconnectedCallback","tag","attributes","setAttribute","append","createText","text","createTextNode","attributeBinding","newValue","renderChild","console","error","hasChanges","Array","isArray","DevTool","constructor","instance","window","__REDUX_DEVTOOLS_EXTENSION__","devTool","connect","subscribe","handler","init","send","action","changeDetections","pipe","fnPipe","message","type","newSate","JSON","parse","changeDetection","toLowerCase","toUpperCase"],"sourceRoot":""}